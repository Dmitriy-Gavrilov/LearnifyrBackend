services:
    api:
        container_name: server
        build: .
        ports:
            - "8000:8000"
        env_file:
            - ".env"
        volumes:
            - .:/app
        depends_on:
            alembic:
                condition: service_started

    db:
        container_name: db
        image: postgres:16
        restart: unless-stopped
        environment:
            POSTGRES_DB: ${DB_NAME}
            PG_USER: ${DB_USER}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        volumes:
            - db_data:/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
            interval: 5s
            timeout: 3s
            retries: 5

    alembic:
        build: .
        command: sh -c "alembic upgrade head"
        depends_on:
            db:
                condition: service_healthy
        env_file:
            - ".env"


volumes:
    db_data:
